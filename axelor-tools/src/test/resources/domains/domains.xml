<?xml version="1.0" encoding="UTF-8"?>
<domain-models xmlns="http://axelor.com/xml/ns/domain-models"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/domain-models https://axelor.com/xml/ns/domain-models/domain-models_7.4.xsd">

  <module name="contact" package="com.axelor.contact.db"/>

  <entity name="Title" cacheable="true" implements="java.io.Serializable" repository="abstract">
    <![CDATA[
    This class represents the name initial like Mr., Mrs. etc.

    For example:

    Title title = new Title();
    title.setCode("mr");
    title.setName("Mr.");

    contact.setTitle(title);

    @author John Smith <john.smith@gmail.com>
    @since 1.0
    ]]>
    <string name="code" column="ccc" required="true" unique="true" min="2" equalsInclude="false" help="The unique code."/>
    <string name="name" required="true" unique="true" min="2" help="The title name." index="idx_my"/>

    <extra-imports>
    import org.slf4j.*;
    import java.util.List;
    import static com.google.common.collect.Lists.newArrayList;
    </extra-imports>

    <extra-code>
    <![CDATA[
    private static final Logger log = LoggerFactory.getLogger(Title.class);

  public static List<String> getFooNames() {
      final List<String> names = newArrayList();
      names.add("foo");
      names.add("bar");
      return names;
  }

  public Title saveAndLog() {
      Title title = null;
    log.info("saving Title instance: " + this.getCode());
      try {
        title = this.save();
      } catch (Exception e) {
        log.error("error saving Title");
      }
      return title;
    }
    ]]>
    </extra-code>
  </entity>

  <entity name="Group" repository="none" jsonAttrs="false">
    <string name="code" required="true" unique="true" min="2" />
    <string name="name" required="true" unique="true" min="2" />
    <many-to-many name="contacts" ref="Contact" copy="false" />
    <!-- should not have 'attrs' json field -->
  </entity>

  <entity name="Company">
    <string name="code" required="true" unique="true" min="2" />
    <string name="name" required="true" unique="true" min="2" />
    <string name="extra" json="true" />
    <!-- should not have 'attrs' json field as we define one json field -->
  </entity>

  <entity name="Country" sequential="false" jsonAttrs="true">
    <string name="code" required="true" unique="true" min="2" />
    <string name="name" required="true" unique="true" min="2" />
    <string name="extra" json="true" />
    <finder-method name="findByName" using="code, name" filter="self.code = :code OR self.name = :name" orderBy="name" cacheable="true" flush="false"/>
    <finder-method name="findByNameAndCode" using="code, name" all="true"/>
    <!-- should have 'attrs' json field as well -->
  </entity>

  <entity name="Contact" sequential="true" equalsIncludeAll="true" cacheable="false">
    <string name="empId" sequence="emp.seq"/>
    <many-to-one name="title" ref="Title" unique="true" />
    <string name="firstName" required="true" initParam="true"/>
    <string name="lastName" required="true" initParam="true"/>
    <string name="fullName" namecolumn="true" search="firstName,lastName" transient="true">
      <![CDATA[
      return title ? title.getName() + " " + firstName + " " + lastName : firstName + " " + lastName
      ]]>
    </string>
    <string name="name" namecolumn="true" search="firstName,lastName">
      <![CDATA[
      return getFullName();
      ]]>
    </string>
    <string name="email" required="true" unique="true" initParam="true" massUpdate="true"  column="email_address"/>
    <string name="personalEmail" encrypted="true" />
    <binary name="personalPhoto" encrypted="true" />
    <string name="phone" max="20" equalsInclude="false" massUpdate="true"/>
    <string name="notes" multiline="true" title="About Me" />
    <string name="resume" large="true" encrypted="true" />
    <date name="dateOfBirth" default="now" />
    <many-to-many name="groups" ref="Group" mappedBy="contacts" table="contact_groups" column="contact_id" column2="group_id" />

    <!-- test o2m fields with mappedBy & orphanRemoval -->
    <one-to-many name="addresses" ref="Address" mappedBy="contact" orderBy="area"/>
    <one-to-many name="addresses2" ref="Address" mappedBy="contact" orderBy="area" orphanRemoval="true"/>
    <one-to-many name="addresses3" ref="Address" mappedBy="contact" orderBy="area" orphanRemoval="false"/>
    <one-to-many name="addresses4" ref="Address" orderBy="area" />
    <one-to-many name="addresses5" ref="Address" orderBy="area" orphanRemoval="true" />
    <one-to-many name="addresses6" ref="Address" orderBy="area" orphanRemoval="false" />

    <index name="IDX_NAMES" columns="firstName,lastName,fullName"/>
    <index columns="id,fullName DESC,email ASC"/>
    <track subscribe="true">
      <field name="fullName" />
      <field name="email" />
      <field name="phone" if="!email" on="UPDATE" />
      <message if="true" on="CREATE">Contact created.</message>
      <message if="firstName == 'admin'" on="UPDATE" tag="important">Admin</message>
      <message if="some == 'thing'" tag="success" fields="email,phone">Success</message>
      <message if="!some" tag="important" fields="email">Failed</message>
    </track>
  </entity>

  <entity name="Contact">
    <string name="name" />
    <track>
      <field name="name" on="CREATE" />
    </track>
  </entity>

  <entity name="Address" equalsIncludeAll="true">
    <many-to-one name="contact" ref="Contact" required="true" />
    <string name="street" required="true" />
    <string name="area" required="true" />
    <string name="city" required="true" />
    <many-to-one name="country" ref="Country" required="true" />
    <many-to-one name="user" column="user_id" ref="com.axelor.auth.db.User" />
    <finder-method name="findByContact" using="long:contactId, String:name" filter="self.customer.id = :contactId OR self.customer.fullName = :name" all="true"/>
    <finder-method name="findByContact" using="String:email" filter="self.customer.email = :email" all="true"/>

    <finder-method name="findByContact" using="contact" all="false"/>
    <finder-method name="findByUser" using="user" all="false"/>

  </entity>

  <enum name="AccountStatus">
    <item name="OPEN" />
    <item name="CLOSED" title="Closed" />
  </enum>

  <enum name="AccountStatus">
    <item name="CANCELED" />
  </enum>

  <enum name="NumStatus" numeric="true">
    <item name="ONE" value="1" />
    <item name="TWO" value="2" />
    <item name="THREE" value="3" />
  </enum>

  <enum name="StrStatus">
    <item name="ONE" value="one" />
    <item name="TWO" value="two" />
    <item name="THREE" value="three" />
  </enum>

  <entity name="Account">
    <enum name="status" ref="AccountStatus" default="OPEN" />
    <enum name="numStatus" ref="NumStatus" />
    <enum name="strStatus" ref="StrStatus" />
    <boolean name="active" />
    <string name="name" required="true" />
    <string name="notes" />
    <one-to-one name="config" ref="AccountConfig" />
  </entity>
  <entity name="AccountConfig">
    <string name="name" required="true" />
    <one-to-one name="account" ref="AccountConfig" mappedBy="config" />
    <one-to-one name="account2" ref="AccountConfig" mappedBy="config" orphanRemoval="true" />
    <one-to-one name="account3" ref="AccountConfig" mappedBy="config" orphanRemoval="false" />
  </entity>

  <!-- field replace test -->
  <entity name="Account">
     <string name="notes" large="true"/> <!-- should replace original one -->
     <one-to-one name="config" ref="Contact" /> <!-- should not replace, target is different -->
  </entity>

  <entity name="ConstraintTester" persistable="false">
    <string name="someName"/>
    <string name="anotherName" column="another"/>
    <many-to-one name="myTitle" ref="Title"/>
    <index columns="someName,anotherName,myTitle" unique="true"/>
  </entity>

  <!-- inheritance -->
  <entity name="Hello" strategy="SINGLE">
    <string name="title" required="true" translatable="true"/>
    <string name="message" required="true"/>
    <track>
      <field name="message" on="CREATE" />
    </track>
  </entity>

  <entity name="HelloWorld" extends="Hello" strategy="CLASS" equalsIncludeAll="true">
    <string name="tags"/>
    <string name="hrCode" />
    <string name="hRCode" />
    <string name="URL" />
    <finder-method name="findBy" using="hrCode,hRCode,URL"/>
  </entity>

</domain-models>
